angular.module("dsg.loadingCounter",["ng"]),angular.module("dsg.loadingCounter").directive("loadingCounter",function(LoadingCounter){"use strict";return{restrict:"AEC",transclude:!0,scope:{pendingTasksCount:"="},link:function(scope,element,attrs,ctrl,transclude){transclude(scope,function(clone){element.append(clone)});var toggleVisible=function(show){attrs.hiddenClass||attrs.shownClass?(attrs.hiddenClass&&element.toggleClass(attrs.hiddenClass,!show),attrs.shownClass&&element.toggleClass(attrs.shownClass,show)):show?element.show():element.hide()};scope.loadingCounter=LoadingCounter,scope.pendingTasksCount=LoadingCounter.pendingRequestsCount||0,toggleVisible(!1),scope.$watch("loadingCounter.pendingRequestsCount",function(newVal,oldVal){angular.isDefined(newVal)&&angular.isDefined(oldVal)&&newVal!==oldVal&&(toggleVisible(newVal>0),scope.pendingTasksCount=newVal)})}}}),angular.module("dsg.loadingCounter").provider("LoadingCounter",[function(){"use strict";var exclusions=[],shouldExclude=function(config){for(var shouldBeExcluded=!1,i=0;i<exclusions.length&&!shouldBeExcluded;i++){var filter=exclusions[i];shouldBeExcluded=!!config.method.match(filter.method)&&!!config.url.match(filter.url)}return shouldBeExcluded};return{addExclusion:function(url,method){if(!url)throw'You must specify an url pattern for AsyncLoader.addExclusion(url, method); use ".*" if you want to exclude all async calls explicitly';exclusions.push({url:url,method:method||".*"})},$get:function($q){var service={pendingRequestsCount:0,pendingRequests:{}};return service.getPendingRequests=function(){return pendingRequestsCount},service.push=function(url){url&&(service.pendingRequests[url]=(service.pendingRequests[url]||0)+1),service.pendingRequestsCount++},service.pop=function(url){service.pendingRequestsCount>0&&(url&&service.pendingRequests[url]>0?(service.pendingRequests[url]--,service.pendingRequestsCount--):service.pendingRequestsCount--)},service.request=function(config){return shouldExclude(config)||service.push(config.url),config},service.requestError=function(rejection){return service.pop(rejection.config.url),$q.reject(rejection)},service.response=function(response){return service.pop(response.config.url),response},service.responseError=function(rejection){return service.pop(rejection.config.url),$q.reject(rejection)},service}}}]);